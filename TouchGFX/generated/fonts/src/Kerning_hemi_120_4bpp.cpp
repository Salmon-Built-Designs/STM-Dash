#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_hemi_120_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0037, -11 },  // (First char = [0x0037, seven], Second char = [0x002C, comma], Kerning dist = -11)
    { 0x0046, -16 },  // (First char = [0x0046, F], Second char = [0x002C, comma], Kerning dist = -16)
    { 0x0050, -8 },  // (First char = [0x0050, P], Second char = [0x002C, comma], Kerning dist = -8)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x002C, comma], Kerning dist = -9)
    { 0x0056, -8 },  // (First char = [0x0056, V], Second char = [0x002C, comma], Kerning dist = -8)
    { 0x0057, -6 },  // (First char = [0x0057, W], Second char = [0x002C, comma], Kerning dist = -6)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x002C, comma], Kerning dist = -9)
    { 0x0066, -12 },  // (First char = [0x0066, f], Second char = [0x002C, comma], Kerning dist = -12)
    { 0x0072, -12 },  // (First char = [0x0072, r], Second char = [0x002C, comma], Kerning dist = -12)
    { 0x0076, -7 },  // (First char = [0x0076, v], Second char = [0x002C, comma], Kerning dist = -7)
    { 0x0077, -7 },  // (First char = [0x0077, w], Second char = [0x002C, comma], Kerning dist = -7)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x004C, -10 },  // (First char = [0x004C, L], Second char = [0x002D, hyphen], Kerning dist = -10)
    { 0x0054, -10 },  // (First char = [0x0054, T], Second char = [0x002D, hyphen], Kerning dist = -10)
    { 0x0056, -7 },  // (First char = [0x0056, V], Second char = [0x002D, hyphen], Kerning dist = -7)
    { 0x0058, -8 },  // (First char = [0x0058, X], Second char = [0x002D, hyphen], Kerning dist = -8)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x002D, hyphen], Kerning dist = -11)
    { 0x005A, -7 },  // (First char = [0x005A, Z], Second char = [0x002D, hyphen], Kerning dist = -7)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x002D, hyphen], Kerning dist = -3)
    { 0x0078, -4 },  // (First char = [0x0078, x], Second char = [0x002D, hyphen], Kerning dist = -4)
    { 0x0037, -11 },  // (First char = [0x0037, seven], Second char = [0x002E, period], Kerning dist = -11)
    { 0x0046, -16 },  // (First char = [0x0046, F], Second char = [0x002E, period], Kerning dist = -16)
    { 0x0050, -8 },  // (First char = [0x0050, P], Second char = [0x002E, period], Kerning dist = -8)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -9)
    { 0x0056, -8 },  // (First char = [0x0056, V], Second char = [0x002E, period], Kerning dist = -8)
    { 0x0057, -6 },  // (First char = [0x0057, W], Second char = [0x002E, period], Kerning dist = -6)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x002E, period], Kerning dist = -9)
    { 0x0066, -12 },  // (First char = [0x0066, f], Second char = [0x002E, period], Kerning dist = -12)
    { 0x0072, -12 },  // (First char = [0x0072, r], Second char = [0x002E, period], Kerning dist = -12)
    { 0x0076, -7 },  // (First char = [0x0076, v], Second char = [0x002E, period], Kerning dist = -7)
    { 0x0077, -7 },  // (First char = [0x0077, w], Second char = [0x002E, period], Kerning dist = -7)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0030, zero], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0030, zero], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0030, zero], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0030, zero], Kerning dist = -2)
    { 0x002C, -4 },  // (First char = [0x002C, comma], Second char = [0x0031, one], Kerning dist = -4)
    { 0x002E, -4 },  // (First char = [0x002E, period], Second char = [0x0031, one], Kerning dist = -4)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0033, three], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0033, three], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0033, three], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0033, three], Kerning dist = -2)
    { 0x0037, -13 },  // (First char = [0x0037, seven], Second char = [0x0034, four], Kerning dist = -13)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0036, six], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0036, six], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0036, six], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0036, six], Kerning dist = -2)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0037, seven], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x0037, seven], Kerning dist = -2)
    { 0x0034, -5 },  // (First char = [0x0034, four], Second char = [0x0037, seven], Kerning dist = -5)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0038, eight], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0038, eight], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0038, eight], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0038, eight], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0039, nine], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0039, nine], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0039, nine], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0039, nine], Kerning dist = -2)
    { 0x0041, -9 },  // (First char = [0x0041, A], Second char = [0x003F, question], Kerning dist = -9)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x003F, question], Kerning dist = -5)
    { 0x004C, -11 },  // (First char = [0x004C, L], Second char = [0x003F, question], Kerning dist = -11)
    { 0x0052, -4 },  // (First char = [0x0052, R], Second char = [0x003F, question], Kerning dist = -4)
    { 0x0061, -3 },  // (First char = [0x0061, a], Second char = [0x003F, question], Kerning dist = -3)
    { 0x0030, -2 },  // (First char = [0x0030, zero], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0033, -2 },  // (First char = [0x0033, three], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0036, -2 },  // (First char = [0x0036, six], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0038, -2 },  // (First char = [0x0038, eight], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0039, -2 },  // (First char = [0x0039, nine], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0041,  2 },  // (First char = [0x0041, A], Second char = [0x0041, A], Kerning dist = 2)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0046, -9 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -9)
    { 0x004A, -2 },  // (First char = [0x004A, J], Second char = [0x0041, A], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0050, -7 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -7)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0053, -2 },  // (First char = [0x0053, S], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -8)
    { 0x0055, -2 },  // (First char = [0x0055, U], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0056, -9 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -9)
    { 0x0057, -7 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -7)
    { 0x0059, -11 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -11)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0066, -5 },  // (First char = [0x0066, f], Second char = [0x0041, A], Kerning dist = -5)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0072, -6 },  // (First char = [0x0072, r], Second char = [0x0041, A], Kerning dist = -6)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0076, -6 },  // (First char = [0x0076, v], Second char = [0x0041, A], Kerning dist = -6)
    { 0x0077, -6 },  // (First char = [0x0077, w], Second char = [0x0041, A], Kerning dist = -6)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0043, C], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0047, G], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0047, G], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0047, G], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0047, G], Kerning dist = -2)
    { 0x002D, -10 },  // (First char = [0x002D, hyphen], Second char = [0x004A, J], Kerning dist = -10)
    { 0x0046, -14 },  // (First char = [0x0046, F], Second char = [0x004A, J], Kerning dist = -14)
    { 0x0050, -9 },  // (First char = [0x0050, P], Second char = [0x004A, J], Kerning dist = -9)
    { 0x0054, -11 },  // (First char = [0x0054, T], Second char = [0x004A, J], Kerning dist = -11)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x004A, J], Kerning dist = -12)
    { 0x0059, -13 },  // (First char = [0x0059, Y], Second char = [0x004A, J], Kerning dist = -13)
    { 0x0072, -9 },  // (First char = [0x0072, r], Second char = [0x004A, J], Kerning dist = -9)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0051, Q], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0053, S], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0053, S], Kerning dist = -3)
    { 0x002C, -9 },  // (First char = [0x002C, comma], Second char = [0x0054, T], Kerning dist = -9)
    { 0x002D, -10 },  // (First char = [0x002D, hyphen], Second char = [0x0054, T], Kerning dist = -10)
    { 0x002E, -9 },  // (First char = [0x002E, period], Second char = [0x0054, T], Kerning dist = -9)
    { 0x0041, -8 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -8)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -7)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0054,  2 },  // (First char = [0x0054, T], Second char = [0x0054, T], Kerning dist = 2)
    { 0x0062, -4 },  // (First char = [0x0062, b], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0065, -4 },  // (First char = [0x0065, e], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0068, -2 },  // (First char = [0x0068, h], Second char = [0x0054, T], Kerning dist = -2)
    { 0x006D, -4 },  // (First char = [0x006D, m], Second char = [0x0054, T], Kerning dist = -4)
    { 0x006E, -4 },  // (First char = [0x006E, n], Second char = [0x0054, T], Kerning dist = -4)
    { 0x006F, -4 },  // (First char = [0x006F, o], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0070, -4 },  // (First char = [0x0070, p], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0055, U], Kerning dist = -2)
    { 0x002C, -8 },  // (First char = [0x002C, comma], Second char = [0x0056, V], Kerning dist = -8)
    { 0x002D, -7 },  // (First char = [0x002D, hyphen], Second char = [0x0056, V], Kerning dist = -7)
    { 0x002E, -8 },  // (First char = [0x002E, period], Second char = [0x0056, V], Kerning dist = -8)
    { 0x0030, -2 },  // (First char = [0x0030, zero], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0033, -2 },  // (First char = [0x0033, three], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0036, -2 },  // (First char = [0x0036, six], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0038, -2 },  // (First char = [0x0038, eight], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0039, -2 },  // (First char = [0x0039, nine], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0041, -9 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -9)
    { 0x0042, -3 },  // (First char = [0x0042, B], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0044, -3 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -3)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0056, V], Kerning dist = -3)
    { 0x004C, -9 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -9)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0056,  2 },  // (First char = [0x0056, V], Second char = [0x0056, V], Kerning dist = 2)
    { 0x0059,  2 },  // (First char = [0x0059, Y], Second char = [0x0056, V], Kerning dist = 2)
    { 0x0061, -3 },  // (First char = [0x0061, a], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0062, -6 },  // (First char = [0x0062, b], Second char = [0x0056, V], Kerning dist = -6)
    { 0x0065, -6 },  // (First char = [0x0065, e], Second char = [0x0056, V], Kerning dist = -6)
    { 0x0068, -6 },  // (First char = [0x0068, h], Second char = [0x0056, V], Kerning dist = -6)
    { 0x006B, -5 },  // (First char = [0x006B, k], Second char = [0x0056, V], Kerning dist = -5)
    { 0x006D, -4 },  // (First char = [0x006D, m], Second char = [0x0056, V], Kerning dist = -4)
    { 0x006E, -4 },  // (First char = [0x006E, n], Second char = [0x0056, V], Kerning dist = -4)
    { 0x006F, -6 },  // (First char = [0x006F, o], Second char = [0x0056, V], Kerning dist = -6)
    { 0x0070, -6 },  // (First char = [0x0070, p], Second char = [0x0056, V], Kerning dist = -6)
    { 0x0075, -3 },  // (First char = [0x0075, u], Second char = [0x0056, V], Kerning dist = -3)
    { 0x0079, -3 },  // (First char = [0x0079, y], Second char = [0x0056, V], Kerning dist = -3)
    { 0x002C, -5 },  // (First char = [0x002C, comma], Second char = [0x0057, W], Kerning dist = -5)
    { 0x002E, -5 },  // (First char = [0x002E, period], Second char = [0x0057, W], Kerning dist = -5)
    { 0x0041, -7 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -7)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -5)
    { 0x002D, -9 },  // (First char = [0x002D, hyphen], Second char = [0x0058, X], Kerning dist = -9)
    { 0x0030, -2 },  // (First char = [0x0030, zero], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0033, -2 },  // (First char = [0x0033, three], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0036, -2 },  // (First char = [0x0036, six], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0038, -2 },  // (First char = [0x0038, eight], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0039, -2 },  // (First char = [0x0039, nine], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0058, X], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0058, X], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x0058, X], Kerning dist = -2)
    { 0x002C, -9 },  // (First char = [0x002C, comma], Second char = [0x0059, Y], Kerning dist = -9)
    { 0x002D, -11 },  // (First char = [0x002D, hyphen], Second char = [0x0059, Y], Kerning dist = -11)
    { 0x002E, -9 },  // (First char = [0x002E, period], Second char = [0x0059, Y], Kerning dist = -9)
    { 0x0030, -2 },  // (First char = [0x0030, zero], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0033, -2 },  // (First char = [0x0033, three], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0036, -2 },  // (First char = [0x0036, six], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0038, -2 },  // (First char = [0x0038, eight], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0039, -2 },  // (First char = [0x0039, nine], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0041, -11 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -11)
    { 0x0042, -5 },  // (First char = [0x0042, B], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0044, -5 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x004C, -10 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -10)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0052, -4 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0056,  2 },  // (First char = [0x0056, V], Second char = [0x0059, Y], Kerning dist = 2)
    { 0x0059,  2 },  // (First char = [0x0059, Y], Second char = [0x0059, Y], Kerning dist = 2)
    { 0x0061, -7 },  // (First char = [0x0061, a], Second char = [0x0059, Y], Kerning dist = -7)
    { 0x0062, -8 },  // (First char = [0x0062, b], Second char = [0x0059, Y], Kerning dist = -8)
    { 0x0065, -8 },  // (First char = [0x0065, e], Second char = [0x0059, Y], Kerning dist = -8)
    { 0x006F, -8 },  // (First char = [0x006F, o], Second char = [0x0059, Y], Kerning dist = -8)
    { 0x0070, -8 },  // (First char = [0x0070, p], Second char = [0x0059, Y], Kerning dist = -8)
    { 0x0073, -5 },  // (First char = [0x0073, s], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0075, -5 },  // (First char = [0x0075, u], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x0076, -3 },  // (First char = [0x0076, v], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0079, -5 },  // (First char = [0x0079, y], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x002D, -6 },  // (First char = [0x002D, hyphen], Second char = [0x005A, Z], Kerning dist = -6)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0056, -5 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -5)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -9)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0063, c], Kerning dist = -4)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -4)
    { 0x0056, -6 },  // (First char = [0x0056, V], Second char = [0x0063, c], Kerning dist = -6)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0063, c], Kerning dist = -8)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0064, d], Kerning dist = -4)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0064, d], Kerning dist = -4)
    { 0x0056, -6 },  // (First char = [0x0056, V], Second char = [0x0064, d], Kerning dist = -6)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -8)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0065, e], Kerning dist = -4)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -4)
    { 0x0056, -6 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -6)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -8)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0067, g], Kerning dist = -4)
    { 0x0056, -6 },  // (First char = [0x0056, V], Second char = [0x0067, g], Kerning dist = -6)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -8)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0054, -4 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0056, -6 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -6)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -8)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -5)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0071, q], Kerning dist = -4)
    { 0x0056, -6 },  // (First char = [0x0056, V], Second char = [0x0071, q], Kerning dist = -6)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -8)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, w], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -2)
    { 0x0056, -6 },  // (First char = [0x0056, V], Second char = [0x0073, s], Kerning dist = -6)
    { 0x0059, -9 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -9)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -4)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -6)
    { 0x002C, -7 },  // (First char = [0x002C, comma], Second char = [0x0076, v], Kerning dist = -7)
    { 0x002E, -7 },  // (First char = [0x002E, period], Second char = [0x0076, v], Kerning dist = -7)
    { 0x0041, -6 },  // (First char = [0x0041, A], Second char = [0x0076, v], Kerning dist = -6)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -3)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -7)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0076, v], Kerning dist = -3)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0076, v], Kerning dist = -2)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0076, v], Kerning dist = -3)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x0076, v], Kerning dist = -2)
    { 0x002C, -7 },  // (First char = [0x002C, comma], Second char = [0x0077, w], Kerning dist = -7)
    { 0x002E, -7 },  // (First char = [0x002E, period], Second char = [0x0077, w], Kerning dist = -7)
    { 0x0041, -6 },  // (First char = [0x0041, A], Second char = [0x0077, w], Kerning dist = -6)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0077, w], Kerning dist = -3)
    { 0x004C, -6 },  // (First char = [0x004C, L], Second char = [0x0077, w], Kerning dist = -6)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0077, w], Kerning dist = -2)
    { 0x006B, -3 },  // (First char = [0x006B, k], Second char = [0x0077, w], Kerning dist = -3)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x0077, w], Kerning dist = -2)
    { 0x002D, -4 },  // (First char = [0x002D, hyphen], Second char = [0x0078, x], Kerning dist = -4)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0078, x], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0073, -2 },  // (First char = [0x0073, s], Second char = [0x0078, x], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0079, y], Kerning dist = -4)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x0079, y], Kerning dist = -6)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x007A, z], Kerning dist = -6)
};
